version: '3.9'

services:
  bot1:
    image: magfia_bot:v1
    container_name: magfia_bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      # kafka:
      #   condition: service_healthy
      redis:
        condition: service_healthy

  bot2:
    image: minefia_bot:v1
    container_name: minefia_bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      # kafka:
      #   condition: service_healthy
      redis:
        condition: service_healthy

  migrations:
    image: mafia_migrations:v1
    depends_on:
      postgres:
        condition: service_healthy

  # prometheus_metrics:
  #   image: mafia_prometheus_metrics:v1
  #   restart: unless-stopped
  #   ports:
  #     - 8081:8081
  #   depends_on:
  #     kafka:
  #       condition: service_healthy

  postgres:
    image: postgres:latest
    restart: unless-stopped
    shm_size: 128mb
    container_name: postgres-server
    env_file:
      - bot/mafia/config.env
    volumes:
      - ./create_multiple_databases:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=magfia,minefia
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   ports:
  #     - "32181:32181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 32181
  #     ZOOKEEPER_TICK_TIME: 2000

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   ports:
  #    - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
  #     KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka:29092,LISTENER_EXTERNAL://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  #   healthcheck:
  #     test: nc -z localhost 9092 || exit -1
  #     start_period: 15s
  #     interval: 5s
  #     timeout: 10s
  #     retries: 10

  redis:
    image: redis:latest
    restart: unless-stopped
    container_name: redis-server
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 3s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
  # prometheus:
  #   image: prom/prometheus:v2.40.4
  #   container_name: prometheus-server
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  # grafana:
  #   image: grafana/grafana:9.3.0
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - GF_SECUTIRY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=password
  #   volumes:
  #     - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
  #     - grafana:/var/lib/grafana

volumes:
  postgres_data:
  # grafana:
  redis_data: